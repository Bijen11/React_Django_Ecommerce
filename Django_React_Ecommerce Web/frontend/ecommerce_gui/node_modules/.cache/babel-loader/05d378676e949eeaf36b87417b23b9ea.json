{"ast":null,"code":"import reducer from '../reducers/auth';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL } from './actionsTypes';\nexport const register = (username, password, re_password) => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'x-csrftoken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password,\n    re_password\n  });\n\n  try {\n    const res = await axios.post(`http://127.0.0.1:8000/account/register/`, body, config);\n\n    if (res.data.error) {\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    } else {\n      dispatch({\n        type: REGISTER_SUCCESS\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["D:/finalYear/frontend/ecommerce_gui/src/actions/auth.js"],"names":["reducer","Cookies","axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","register","username","password","re_password","dispatch","config","headers","get","body","JSON","stringify","res","post","data","error","type","REGISTER_FAIL","REGISTER_SUCCESS","err"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAyBC,UAAzB,EAAqCC,mBAArC,EAA0DC,gBAA1D,QAAkF,gBAAlF;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,WAArB,KAAqC,MAAMC,QAAN,IAAkB;AAC3E,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB,kBAFX;AAGL,qBAAgBZ,OAAO,CAACa,GAAR,CAAY,WAAZ;AAHX;AADE,GAAf;AAQA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAET,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMQ,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAY,yCAAZ,EAAsDJ,IAAtD,EAA4DH,MAA5D,CAAlB;;AAEA,QAAIM,GAAG,CAACE,IAAJ,CAASC,KAAb,EAAoB;AAChBV,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAEC;AADD,OAAD,CAAR;AAGH,KAJD,MAIO;AACHZ,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAEE;AADD,OAAD,CAAR;AAGH;AACJ,GAZD,CAYE,OAAOC,GAAP,EAAY;AACVd,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEC;AADD,KAAD,CAAR;AAGH;AACJ,CA5BM","sourcesContent":["import reducer from '../reducers/auth'\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport { LOGIN_SUCCESS , LOGIN_FAIL, USER_LOADED_SUCCESS ,USER_LOADED_FAIL } from './actionsTypes';\r\n\r\n\r\nexport const register = (username, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'x-csrftoken' : Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`http://127.0.0.1:8000/account/register/`, body, config);\r\n\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}