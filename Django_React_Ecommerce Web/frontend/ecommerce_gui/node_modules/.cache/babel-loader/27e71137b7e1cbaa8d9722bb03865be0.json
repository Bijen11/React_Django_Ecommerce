{"ast":null,"code":"import reducer from '../reducers/auth';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL, LOGOUT } from './actionsTypes';\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.get(`http://localhost:8000/auth/users/me/`, config);\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(`http://localhost:8000/auth/jwt/create/`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["D:/finalYear/frontend/ecommerce_gui/src/actions/auth.js"],"names":["reducer","Cookies","axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","load_user","dispatch","localStorage","getItem","config","headers","res","get","type","payload","data","err","login","email","password","body","JSON","stringify","post"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAyBC,UAAzB,EAAqCC,mBAArC,EAA0DC,gBAA1D,EAA2EC,qBAA3E,EACIC,kBADJ,EACwBC,MADxB,QACsC,gBADtC;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7C,MAAIC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAJ,EAAoC;AAChC,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,OAAMH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EAFlD;AAGL,kBAAU;AAHL;AADE,KAAf;;AAQA,QAAI;AACA,YAAMG,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,sCAAX,EAAkDH,MAAlD,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEb,mBADD;AAELc,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOC,GAAP,EAAY;AACVV,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEZ;AADD,OAAD,CAAR;AAGH;AACJ,GArBD,MAqBO;AACHK,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGH;AACJ,CA3BM;AA6BP,OAAO,MAAMgB,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMb,QAAN,IAAkB;AACxD,QAAMG,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMU,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEJ,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMR,GAAG,GAAG,MAAMd,KAAK,CAAC0B,IAAN,CAAY,wCAAZ,EAAqDH,IAArD,EAA2DX,MAA3D,CAAlB;AAEAH,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEf,aADD;AAELgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AACH,GATD,CASE,OAAOW,GAAP,EAAY;AACVV,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH;AACJ,CAvBM","sourcesContent":["import reducer from '../reducers/auth'\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport { LOGIN_SUCCESS , LOGIN_FAIL, USER_LOADED_SUCCESS ,USER_LOADED_FAIL,AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL, LOGOUT } from './actionsTypes';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        try {\r\n            const res = await axios.get(`http://localhost:8000/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}