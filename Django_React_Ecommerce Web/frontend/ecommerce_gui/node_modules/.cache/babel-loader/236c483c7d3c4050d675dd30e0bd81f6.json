{"ast":null,"code":"var _jsxFileName = \"D:\\\\finalYear\\\\frontend\\\\ecommerce_gui\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport axios from 'axios';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Container, Divider } from 'semantic-ui-react';\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    textAlign: \"center\"\n  }, /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"h1\", null, \"Sign In\"), /*#__PURE__*/React.createElement(\"p\", null, \"Sign into your Account\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e)\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Form.Item, {\n    className: \"form-control\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    placeholder: \"email\"\n  }))), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    className: \"form-control\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    required: true\n  })), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/reset-password\"\n  }, \" \", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"login-form-forgot\"\n  }, \"Forgot password\")))), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"login-form-button\",\n    type: \"submit\"\n  }, \"Log in\"), /*#__PURE__*/React.createElement(\"br\", null), \"Or  \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/contact\"\n  }, \" \", /*#__PURE__*/React.createElement(\"a\", null, \"register now!\"))))));\n};\n\n_s(Login, \"c4eoIdFVLb9pYUSfk/9dbU/tcTE=\");\n\n_c = Login;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/finalYear/frontend/ecommerce_gui/src/Components/Login.js"],"names":["React","useState","Link","Redirect","connect","login","axios","Form","Input","Button","Checkbox","UserOutlined","LockOutlined","Container","Divider","Login","isAuthenticated","formData","setFormData","email","password","onChange","e","target","name","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,MAA9C;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,mBAAnC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEV,EAAAA,KAAF;AAASW,EAAAA;AAAT,CAAD,KAAgC;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC;AACrCkB,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAxC;AAKA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,QAA5B;;AAEA,QAAMI,QAAQ,GAAGC,CAAC,IAAIJ,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,GAAD,CAAjC;;AAEA,QAAMC,QAAQ,GAAGJ,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACK,cAAF;AAEAtB,IAAAA,KAAK,CAACc,KAAD,EAAQC,QAAR,CAAL;AACH,GAJD;;AASA,MAAIJ,eAAJ,EAAqB;AACjB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb,MAAP;AACH;;AAED,sBAEI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC;AAArB,kBACI,oBAAC,IAAD,qBACA,0CADA,eAEA,wDAFA,eAGA;AAAM,IAAA,QAAQ,EAAEM,CAAC,IAAII,QAAQ,CAACJ,CAAD;AAA7B,kBACI,8CACA,oBAAC,IAAD,CAAM,IAAN;AACQ,IAAA,SAAS,EAAC,cADlB;AAEQ,IAAA,IAAI,EAAC,OAFb;AAGQ,IAAA,IAAI,EAAC,OAHb;AAIQ,IAAA,KAAK,EAAEH,KAJf;AAKQ,IAAA,QAAQ,EAAEG,CAAC,IAAID,QAAQ,CAACC,CAAD,CAL/B;AAMQ,IAAA,QAAQ;AANhB,kBAQI,oBAAC,KAAD;AAAO,IAAA,MAAM,eAAE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB,MAAf;AAAiE,IAAA,WAAW,EAAC;AAA7E,IARJ,CADA,CADJ,eAaI,8CACI,oBAAC,IAAD,CAAM,IAAN,qBACI,oBAAC,KAAD;AACA,IAAA,MAAM,eAAE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB,MADR;AAEA,IAAA,SAAS,EAAC,cAFV;AAGA,IAAA,IAAI,EAAC,UAHL;AAIA,IAAA,IAAI,EAAC,UAJL;AAKA,IAAA,WAAW,EAAG,UALd;AAMA,IAAA,KAAK,EAAEF,QANP;AAOA,IAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAD,CAPvB;AAQA,IAAA,SAAS,EAAC,GARV;AASA,IAAA,QAAQ;AATR,IADJ,CADJ,eAgBI,oBAAC,IAAD,CAAM,IAAN,qBAGI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,uBAA4B;AAAG,IAAA,SAAS,EAAC;AAAb,uBAA5B,CAHJ,CAhBJ,CAbJ,eAsCI,oBAAC,IAAD,CAAM,IAAN,qBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,IAAI,EAAC;AAA3C,cADJ,eAEI,+BAFJ,uBAGQ,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,uBAAqB,+CAArB,CAHR,CAtCJ,CAHA,CADJ,CAFJ;AAyDH,CAhFD;;GAAMP,K;;KAAAA,K;;AAkFN,MAAMa,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,eAAe,EAAEa,KAAK,CAACC,IAAN,CAAWd;AADE,CAAL,CAA7B;;AAIA,eAAeZ,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA;AAAF,CAAlB,CAAP,CAAoCU,KAApC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport axios from 'axios';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Container, Divider } from 'semantic-ui-react'\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '' \n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password);\n    };\n\n\n\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        \n        <Container textAlign='center'>\n            <Form>\n            <h1>Sign In</h1>\n            <p>Sign into your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div>\n                <Form.Item\n                        className='form-control'\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"email\" />\n                    </Form.Item>\n                </div>\n                <div>\n                    <Form.Item>\n                        <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        className='form-control'\n                        type='password'\n                        name='password'\n                        placeholder = \"password\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                \n                    </Form.Item>\n\n                    <Form.Item>\n                    \n\n                        <Link to='/reset-password'> <a className=\"login-form-forgot\">\n                        Forgot password\n                        </a>\n                        </Link>\n                    </Form.Item>\n                </div>\n                <Form.Item>\n                    <Button className=\"login-form-button\" type='submit'>Log in</Button>\n                    <br/>\n                    Or  <Link to='/contact'> <a>register now!</a></Link>\n                </Form.Item>\n            </form>\n            \n          \n            </Form>\n      \n            </Container>\n      \n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n"]},"metadata":{},"sourceType":"module"}