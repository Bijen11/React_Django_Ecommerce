{"ast":null,"code":"var _jsxFileName = \"D:\\\\finalYear\\\\frontend\\\\ecommerce_gui\\\\src\\\\Components\\\\CSRFToken.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n/* const CSRFToken = () => {\r\n    const [csrftoken, setcsrftoken] = useState('');\r\n\r\n\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n   \r\n \r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n            console.log(await axios.get(`http://127.0.0.1:8000/account/csrf_cookie/`));\r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n        fetchData();\r\n        getCookie('csrftoken')\r\n        console.log( 'nope',getCookie('csrftoken'));\r\n    }, []);\r\n */\n\nexport const CSRFToken = getState => {\n  _s();\n\n  // Get token from state\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await axios.get(`http://127.0.0.1:8000/account/csrf_cookie/`);\n        const token = getState().auth.token;\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []); // Headers\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // If token, add to headers config\n\n  if (token) {\n    config.headers['csrftoken'] = `Token ${token}`;\n  }\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"csrfmiddlewaretoken\",\n    value: csrftoken\n  });\n};\n\n_s(CSRFToken, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CSRFToken;\nexport default CSRFToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSRFToken\");","map":{"version":3,"sources":["D:/finalYear/frontend/ecommerce_gui/src/Components/CSRFToken.js"],"names":["React","useState","useEffect","axios","Cookies","CSRFToken","getState","fetchData","get","token","auth","err","config","headers","csrftoken"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAc;AAAA;;AACnC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,SAAS,GAAG,YAAY;AAC1B,UAAI;AACJ,cAAMJ,KAAK,CAACK,GAAN,CAAW,4CAAX,CAAN;AACA,cAAMC,KAAK,GAAGH,QAAQ,GAAGI,IAAX,CAAgBD,KAA9B;AACC,OAHD,CAGE,OAAOE,GAAP,EAAY,CAEb;AACJ,KAPD;;AAQAJ,IAAAA,SAAS;AAEZ,GAXQ,EAWN,EAXM,CAAT,CAHmC,CAiBnC;;AACA,QAAMK,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CAlBmC,CAwBnC;;AACA,MAAIJ,KAAJ,EAAW;AACTG,IAAAA,MAAM,CAACC,OAAP,CAAe,WAAf,IAA+B,SAAQJ,KAAM,EAA7C;AACD;;AAaL,sBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,qBAA1B;AAAgD,IAAA,KAAK,EAAEK;AAAvD,IADJ;AAGH,CA3CU;;GAAMT,S;;KAAAA,S;AA8CjB,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\n/* const CSRFToken = () => {\r\n    const [csrftoken, setcsrftoken] = useState('');\r\n\r\n\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n   \r\n \r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n            console.log(await axios.get(`http://127.0.0.1:8000/account/csrf_cookie/`));\r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n        fetchData();\r\n        getCookie('csrftoken')\r\n        console.log( 'nope',getCookie('csrftoken'));\r\n    }, []);\r\n */\r\n    export const CSRFToken = (getState) => {\r\n        // Get token from state\r\n\r\n        useEffect(() => {\r\n            const fetchData = async () => {\r\n                try {\r\n                await axios.get(`http://127.0.0.1:8000/account/csrf_cookie/`);\r\n                const token = getState().auth.token;\r\n                } catch (err) {\r\n    \r\n                }\r\n            };\r\n            fetchData();\r\n            \r\n        }, []);\r\n        \r\n      \r\n        // Headers\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        };\r\n      \r\n        // If token, add to headers config\r\n        if (token) {\r\n          config.headers['csrftoken'] = `Token ${token}`;\r\n        }\r\n      \r\n        \r\n   \r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n   \r\n\r\n    return (\r\n        <input type='hidden' name='csrfmiddlewaretoken' value={csrftoken} />\r\n    );\r\n};\r\n\r\n\r\nexport default CSRFToken;\r\n"]},"metadata":{},"sourceType":"module"}