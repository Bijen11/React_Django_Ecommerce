{"ast":null,"code":"import _regeneratorRuntime from\"D:/finalYear/frontend/ecommerce_gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/finalYear/frontend/ecommerce_gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/finalYear/frontend/ecommerce_gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import Cookies from'js-cookie';import{Collapse}from'antd';var CSRFToken=function CSRFToken(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),csrftoken=_useState2[0],setcsrftoken=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{axios.get(\"http://127.0.0.1:8000/account/csrf_cookie/\").then(function(res){return console.log(res);});}catch(err){}case 1:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();setcsrftoken(getCookie('csrftoken'));},[]);var getCookie=function getCookie(name){var cookieValue=null;if(document.cookie&&document.cookie!==''){console.log('1st',document.cookie);var cookies=document.cookie.split(';');for(var i=0;i<cookies.length;i++){var cookie=cookies[i].trim();console.log(cookie);if(cookie.substring(0,name.length+1)===name+'='){cookieValue=decodeURIComponent(cookie.substring(name.length+1));console.log('noe',cookieValue);break;}}}return cookieValue;};return/*#__PURE__*/React.createElement(\"input\",{type:\"hidden\",name:\"csrfmiddlewaretoken\",value:csrftoken});};export default CSRFToken;","map":{"version":3,"sources":["D:/finalYear/frontend/ecommerce_gui/src/Components/CSRFToken.js"],"names":["React","useState","useEffect","axios","Cookies","Collapse","CSRFToken","csrftoken","setcsrftoken","fetchData","get","then","res","console","log","err","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent"],"mappings":"2cAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,QAAT,KAAyB,MAAzB,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,eACcL,QAAQ,CAAC,EAAD,CADtB,wCACbM,SADa,eACFC,YADE,eASpBN,SAAS,CAAC,UAAM,CACZ,GAAMO,CAAAA,SAAS,0FAAG,mIACd,GAAI,CAEFN,KAAK,CAACO,GAAN,+CAAwDC,IAAxD,CAA6D,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAAhE,EAID,CAAC,MAAOG,GAAP,CAAY,CAEb,CATa,sDAAH,kBAATN,CAAAA,SAAS,0CAAf,CAWAA,SAAS,GACTD,YAAY,CAACQ,SAAS,CAAC,WAAD,CAAV,CAAZ,CACH,CAdQ,CAcN,EAdM,CAAT,CAgBA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAU,CACxB,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CACA,GAAIC,QAAQ,CAACC,MAAT,EAAmBD,QAAQ,CAACC,MAAT,GAAoB,EAA3C,CAA+C,CAC3CP,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAkBK,QAAQ,CAACC,MAA3B,EACA,GAAIC,CAAAA,OAAO,CAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,OAAO,CAACG,MAA5B,CAAoCD,CAAC,EAArC,CAAyC,CACrC,GAAIH,CAAAA,MAAM,CAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CACAZ,OAAO,CAACC,GAAR,CAAYM,MAAZ,EACA,GAAIA,MAAM,CAACM,SAAP,CAAiB,CAAjB,CAAoBT,IAAI,CAACO,MAAL,CAAc,CAAlC,IAA0CP,IAAI,CAAG,GAArD,CAA2D,CACvDC,WAAW,CAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,CAAc,CAA/B,CAAD,CAAhC,CACAX,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAkBI,WAAlB,EACA,MACH,CACJ,CACJ,CACD,MAAOA,CAAAA,WAAP,CACH,CAhBD,CAyBA,mBACI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,IAAI,CAAC,qBAA1B,CAAgD,KAAK,CAAEX,SAAvD,EADJ,CAGH,CArDD,CAuDA,cAAeD,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { Collapse } from 'antd';\r\n\r\n\r\n\r\nconst CSRFToken = () => {\r\n    const [csrftoken, setcsrftoken] = useState('');\r\n\r\n\r\n\r\n    \r\n   \r\n \r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                \r\n              axios.get(`http://127.0.0.1:8000/account/csrf_cookie/`).then(res => console.log(res));\r\n        \r\n                \r\n            \r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n        fetchData();\r\n        setcsrftoken(getCookie('csrftoken'));\r\n    }, []);\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            console.log('1st',document.cookie)\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                console.log(cookie)\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    console.log('noe',cookieValue)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n   \r\n\r\n    return (\r\n        <input type='hidden' name='csrfmiddlewaretoken' value={csrftoken} />\r\n    );\r\n};\r\n\r\nexport default CSRFToken;\r\n"]},"metadata":{},"sourceType":"module"}