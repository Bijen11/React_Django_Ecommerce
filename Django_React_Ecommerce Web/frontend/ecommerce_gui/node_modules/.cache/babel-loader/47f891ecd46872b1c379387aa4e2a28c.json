{"ast":null,"code":"var _jsxFileName = \"D:\\\\finalYear\\\\frontend\\\\ecommerce_gui\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport registerServiceWorker from './registerServiceWorker';\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nconst app = /*#__PURE__*/React.createElement(Provider, {\n  store: store\n}, /*#__PURE__*/React.createElement(App, null));\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\nexport default store;","map":{"version":3,"sources":["D:/finalYear/frontend/ecommerce_gui/src/index.js"],"names":["React","ReactDOM","App","createStore","compose","applyMiddleware","composeWithDevTools","thunk","rootReducer","Provider","registerServiceWorker","initialState","middleware","store","app","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,EAAuBC,OAAvB,EAAgCC,eAAhC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAGA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB;AACA,MAAMM,KAAK,GAAGV,WAAW,CACrBK,WADqB,EAErBG,YAFqB,EAGrBL,mBAAmB,CAACD,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAHE,CAAzB;AAMA,MAAME,GAAG,gBAEL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED;AAAjB,gBACI,oBAAC,GAAD,OADJ,CAFJ;AAMAZ,QAAQ,CAACc,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB;AACAP,qBAAqB;AAErB,eAAeG,KAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore , compose, applyMiddleware} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nimport { Provider } from 'react-redux';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nconst app = (\n\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\n\nexport default store;"]},"metadata":{},"sourceType":"module"}